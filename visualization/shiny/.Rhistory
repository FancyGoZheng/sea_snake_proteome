install.packages("ggplot2")
library(ggplot2)
# install.packages("SingleCellExperiment")
# install.packages("scater")
# install.packages("scran")
# install.packages("monocle")
# install.packages("destiny")
# install.packages("M3Drop")
# install.packages("scmap")
# install.packages("scran")
# install.packages("scater")
# 将以上要安装的包 打包批量安装
install.packages(c("Seurat","SingleCellExperiment","scater","scran","monocle","destiny","M3Drop","scmap","scran","scater"))
library(Seurat)
library(Seurat)
# install.packages("SingleCellExperiment")
# install.packages("scater")
# install.packages("scran")
# install.packages("monocle")
# install.packages("destiny")
# install.packages("M3Drop")
# install.packages("scmap")
# install.packages("scran")
# install.packages("scater")
# 将以上要安装的包 打包批量安装
install.packages(
a =  c("Seurat","SingleCellExperiment","scater","scran","monocle","destiny","M3Drop","scmap","scran","scater")
)
a =  c("Seurat","SingleCellExperiment","scater","scran","monocle","destiny","M3Drop","scmap","scran","scater")
# install.packages("SingleCellExperiment")
# install.packages("scater")
# install.packages("scran")
# install.packages("monocle")
# install.packages("destiny")
# install.packages("M3Drop")
# install.packages("scmap")
# install.packages("scran")
# install.packages("scater")
# 将以上要安装的包 打包批量安装
install.packages(
a =  c("Seurat","SingleCellExperiment","scater","scran","monocle","destiny","M3Drop","scmap","scran","scater")
sapply(a, library, character.only = TRUE)
# install.packages("SingleCellExperiment")
# install.packages("scater")
# install.packages("scran")
# install.packages("monocle")
# install.packages("destiny")
# install.packages("M3Drop")
# install.packages("scmap")
# install.packages("scran")
# install.packages("scater")
# 将以上要安装的包 打包批量安装
install.packages(
a =  c("Seurat","SingleCellExperiment","scater","scran","monocle","destiny","M3Drop","scmap","scran","scater")
sapply(a, library, character.only = TRUE)
sapply(a, library, character.only = TRUE)
sapply(a[-2], library, character.only = TRUE)
ggplot(mtcars,aes(x=wt,y=mpg))+geom_point()
library(ggplot2)
ggplot(mtcars,aes(x=wt,y=mpg))+geom_point()
# 美化这幅图
ggplot(mtcars,aes(x=wt,y=mpg))+geom_point()+theme_bw()+xlab("wt")+ylab("mpg")+ggtitle("mtcars")
# 用ggplot2和iris 画一幅散点图
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width))+geom_point()+theme_bw()+xlab("Sepal.Length")+ylab("Sepal.Width")+ggtitle("iris")
# 用shell 写一个for 循环
for (i in 1:10) {
print(i)
}
# 用python 写一个for循环
for i in range(1,10):
shiny::runApp('Library/CloudStorage/OneDrive-m.fafu.edu.cn/上大医学院/自己写的论文/蛋白质组学/绘图/Hc/Hc_R_Plot/shiny网站/Hc_toxin_database')
shiny::runApp()
runApp()
shiny::runApp()
library(visNetwork)
install.packages("htmltools")
library(visNetwork)
remove.packages("htmltools")
install.packages("htmltools")
library(visNetwork)
library(r3dmol)
library(shiny)
library(shinydashboard)
library(flexdashboard)
library(shinyalert)
library(shinyjs)
library(shinydisconnect)
library(drawProteins)
library(ggplot2)
library(shinythemes)
library(visNetwork)
library(r3dmol)
library(shiny)
library(shinydashboard)
library(flexdashboard)
library(shinyalert)
library(shinyjs)
library(shinydisconnect)
library(drawProteins)
library(ggplot2)
library(shinythemes)
runApp()
dat <- read.delim("./data/oxi.txt")
View(dat)
PTMs_plot(dat)
runApp()
shiny::runApp()
my_PTM_data <- read.delim("data/Hh_toxin_Oxi_PTMs.txt", row.names=1,encoding = "utf-8")
unique(my_PTM_data$abbr)
runApp()
unique(my_PTM_data$abbr)
runApp()
